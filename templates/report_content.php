<ol class="breadcrumb">
  <li><a href="index.php">Home</a></li>
  <li class="active">IS51018A Web Programming Final Report</li>
</ol>
<div id="main">
  <noscript><strong>Your browser does not support JavaScript. Please enable for full functionality.</strong></noscript>
  <h1>IS51018A Web Programming Final Report</h1>
  <hr>
  <p><strong>Name: </strong>Amrish Parmar</p>
  <p><strong>Website: </strong><a id="site-link" href="http://doc.gold.ac.uk/~aparm001/webprog/portfolio/public/">http://doc.gold.ac.uk/~aparm001/webprog/portfolio/public</a></p>
  <hr>
  <h2>Design and Conception</h2>
  <p>It is becoming increasingly common for individuals in professional industries to produce portfolio-style websites to show to potential employers and clients. They are often used to highlight work history, competencies and showcase previously worked-on projects. With those ideas in mind at the start of the project I began thinking about the type of content that I wanted to include on my website. It was clear to me that I wanted the site to not only demonstrate my web design skills, but also show a broad snapshot of who I was and my capabilities. I therefore chose to include current university projects, projects that I had worked on prior to university, a CV and a hobbies section.</p>
  <p>With the content themes decided on and drafts being prepared I then began to look at the type of design that I wanted to incorporate to the final product. As the potential visitors to the site could be quite wide-ranging I wanted the aesthetic to be guided by principles of simplicity and professionalism with a generally flat design. The colour scheme I wanted was therefore based around combinations white, grey and blue as they are commonly found colours in the branding of many tech companies.</p>
  <p>On paper I produced a number of sketches to help me get a sense of what I wanted to do with placement of core elements. I decided that I wanted the site pages centred within the window with top navigation and a persistent footer. Each page would have a breadcrumb along the top, with a title and introductory paragraph written just below. The remainder of the page would be customised based on the content that I wanted to include.</p>
  <h2>Technologies and Implementation</h2>
  <p>Once I began to create my site I needed to think about the technologies and frameworks that would enable me to successfully implement what I had designed. The obvious ones were of course HTML5, CSS3 and JavaScript as they are the basic modern technologies of the web. I then began looking at the Bootstrap CSS and JS libraries for building web applications. Being a “mobile first” framework with a built-in responsive grid system it seemed a good place to start in beginning to produce a site that would work well across a variety of different devices. As it also incorporated some very useful pre-styled CSS for common elements such as buttons and tables I felt it would free my time to focus on other key areas. However, the problem with the base framework is that it gives a very ‘bland’ appearance to a site. I therefore opted to use a themed version of Bootstrap from the Bootswatch site called Yeti which styles elements with an aesthetic that I felt would be much more suitable to the design of the portfolio.</p>
  <p>I then began creating each individual page on the website using the available libraries at my disposable to full effect. Along the way I wrote several hundred lines of CSS to achieve custom effects and amend the appearance of some of the default browser and library styling. I also used the jQuery library for animations such as sliding menus and modals.</p>
  <p>One technique I used during development was using separate JavaScript files for the headers and footers of the site. I wrapped HTML inside of the document.write method and then included it in a script tag in the body of each page. As they are the same across the whole it made sense to centralise it in this way. It ensured that I only needed to make changes to one file instead of every file on the site when I wanted to make amendments. Once I was satisfied that I was not going to make any further changes to them I then copied the markup to the individual HTML files. For larger, more complex sites, server-side technologies like PHP would be a better fit for code centralisation.</p>
  <h2>Optimisation for Mobile</h2>
  <p>As a portfolio designed to read by employers amongst others, it was important that the website was readable on a wide variety of devices. I therefore used responsive design principles to ensure that users receive a consistent experience. The Bootstrap-based library was useful in this respect as the incorporated grid-based system allowed me control over the way elements stacked on the page at lower resolutions. In addition to this I set up two main break points using media queries (one at &le; 991px and one at &le; 767px) to give views for desktop, tablet and smartphone. The optimisations for mobile include the following:</p>
  <ul class="report-list">
    <li>A collapsible navigation bar, so that users tap on the three horizontal lines to reveal menu options on mobile</li>
    <li>A fixed navigation bar which sticks to the top of page as the user scrolls (implemented using jQuery on page load) so that the users don’t have to scroll all the way to the top if they want to change pages</li>
    <li>More proportional heading and paragraph font sizes so that more content can be viewed without unnecessary scrolling or eyestrain</li>
    <li>Fade transitions between pages for a more “native” navigation experience</li>
    <li>Long lists of content are hidden by default to be revealed by user when they tap to show details (e.g. on CV page).</li>
    <li>Some buttons are hidden when they occupy unnecessary space (such as on the homepage). Others are changed into block-level elements so that they are more tidily displayed below each other (such as on the intro to programming page).</li>
    <li>Disabling of modals as they don’t make sense visually on mobile</li>
    <li>Increased width of main content area to make more use of available screen space</li>
  </ul>
  <h2>Issues</h2>
  <p>One problem I encountered earlier on was the fact that pages seemed to take much longer to load that I would expect. Using the developer tools I noticed that when the page loaded messages in the console were showing that a link to a font was broken. It was clear that as at this stage I had not referenced any fonts myself, the culprit was the Bootswatch theme. The issue was being caused by the fact that in the CSS it was referencing a font on Google Fonts, but was missing the http: prefix and was therefore looking a font somewhere on the local machine. After amending the reference in the library, the problem didn’t appear again.</p>
  <p>As I have used jQuery to change some elements on page load, these elements (notably the navigation bar) can look out of place if the browser window is resized after the page has loaded. This can easily be resolved by refreshing the page at the new window size. Though this is something that could potentially be fixed in a future build, it isn’t a major problem given the likely usage scenarios. When users are browsing the web it isn’t very often that they resize the browser to such narrow proportions and if they do they can refresh the page to resolve any issues. Mobile users cannot change the window size of the browser and so they should always get the experience that I have intended for them.</p>
  <p>One thing I was keen to ensure was that every page on the site validated properly as HTML5 with the W3C online tool. Throughout the process I copy and pasted my code in the tool to check that my markup was valid and corrected any errors or warnings that it identified. One particular challenge was when I attempted to use third-party plugins within the site for the contact form, Twitter widget and Soundcloud widgets. The embed code that they provided, though worked correctly when viewed in the browser, did not validate as compliant HTML5 markup as they used deprecated inline attributes such as “frameborder” and “scrolling”. In order ensure compliance with the official specification I removed the offending attributes and replaced them with appropriate ids or classes which I then targeted with CSS to achieve the desired visual effects.</p>
  <p>After completing the vast majority of the site, I wanted to test it in older browsers (namely Internet Explorer 6 through 8) to ensure that it would degrade gracefully. As one might expect there were a number of problematic rendering issues relating to incompatibility with HTML5 that was worse the older the browser. They also failed to take into account CSS media queries. In order to mitigate these issues I made use of two libraries, a shim called HTML5 Shiv, which enabled HTML5 tags to work in older browsers and Respond.js, which enables CSS media queries. Though not perfect, they work well enough for the website to display relatively normally given their age and the limited global usage share.</p>
  <h2>Conclusion</h2>
  <p>Overall, I am happy with the final product that I have produced. It meets the goals that I initially set for myself of producing a smart, professional-looking website to promote my work and myself. I am also pleased with the way it works across browsers and on smartphones and tablets.</p>
  <p>I will certainly continue to use it in the future and will no doubt continue to make improvements and use it as a showcase with potential employers.</p>
  <h2>Libraries and References</h2>
  <ul class="report-list">
    <li><a href="http://jquery.com/" target="_blank"><strong>jQuery</strong></a>, <em>The jQuery Foundation</em> – MIT licence</li>
    <li><a href="http://bootswatch.com/yeti/" target="_blank"><strong>Yeti (Bootswatch Theme)</strong></a>, <em>Thomas Park</em> – MIT licence</li>
    <li><a href="http://getbootstrap.com/" target="_blank"><strong>Bootstrap</strong></a>, <em>@mdo and @fat</em> – MIT licence</li>
    <li><a href="http://fortawesome.github.io/Font-Awesome/" target="_blank"><strong>Font Awesome</strong></a>, <em>Dave Gandy</em> – SIL OFL 1.1/MIT licence</li>
    <li><a href="https://github.com/scottjehl/Respond" target="_blank"><strong>Respond.js</strong></a>, <em>Scott Jehl</em> – MIT licence</li>
    <li><a href="https://github.com/aFarkas/html5shiv" target="_blank"><strong>HTML5 Shiv</strong></a> – MIT licence</li>
    <li><a href="http://antifavicon.com/" target="_blank"><strong>Favicon Generator</strong></a>, <em>Salvatore Sanfilippo</em></li>
    <li><a href="https://twitter.com/" target="_blank"><strong>Twitter widget</strong></a>, <em>Twitter</em></li>
    <li><a href="http://www.foxyform.com/" target="_blank"><strong>Contact form</strong></a>, <em>Foxyform</em></li>
    <li><a href="https://soundcloud.com/" target="_blank"><strong>Soundcloud widget</strong></a>, <em>Soundcloud</em></li>
  </ul>
</div>